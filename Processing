{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":10256448,"sourceType":"datasetVersion","datasetId":6344673}],"dockerImageVersionId":30918,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/arsseniidonskov/sakura-health-eda?scriptVersionId=227603641\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:05.861297Z","iopub.execute_input":"2025-03-14T17:24:05.861797Z","iopub.status.idle":"2025-03-14T17:24:05.882273Z","shell.execute_reply.started":"2025-03-14T17:24:05.861745Z","shell.execute_reply":"2025-03-14T17:24:05.881066Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"r = '/kaggle/input/framingham-heart-study/framingham_heart_study.csv'\ndf = pd.read_csv(r)\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:07.930338Z","iopub.execute_input":"2025-03-14T17:24:07.930715Z","iopub.status.idle":"2025-03-14T17:24:07.985552Z","shell.execute_reply.started":"2025-03-14T17:24:07.930688Z","shell.execute_reply":"2025-03-14T17:24:07.984464Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#male - являеется ли подопытный мужчиной?\n#age - возраст подопытного\n#education - образование\n#currentSmoker - являеется ли он курильщиком \n#cigsPerDay - количество сигарет в день\n#BPMeds - лекарства от сердца\n#prevalentStroke - Указывает, был ли у пациента в анамнезе инсульт\n#prevalentHyp - Указывает, была ли у пациента в анамнезе артериальная гипертензия\n#diabetes - Indicates if the patient has diabetes\n#totChol - Общий уровень холестерина у пациента.\n#sysBP - Систолическое артериальное давление пациента.\n#diaBP - Диастолическое артериальное давление пациента.\n#BMI - Индекс массы тела пациента.\n#heartRate - Частота сердечных сокращений пациента.\n#glucose - Уровень глюкозы у пациента.\n#TenYearCHD - Указывает на 10-летний риск развития ишемической болезни сердца\n\n\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:04.847961Z","iopub.execute_input":"2025-03-14T16:44:04.848493Z","iopub.status.idle":"2025-03-14T16:44:04.85242Z","shell.execute_reply.started":"2025-03-14T16:44:04.848433Z","shell.execute_reply":"2025-03-14T16:44:04.851232Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# **EDA**","metadata":{}},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:04.853815Z","iopub.execute_input":"2025-03-14T16:44:04.854088Z","iopub.status.idle":"2025-03-14T16:44:04.918314Z","shell.execute_reply.started":"2025-03-14T16:44:04.854046Z","shell.execute_reply":"2025-03-14T16:44:04.917404Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"df.info","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:04.919507Z","iopub.execute_input":"2025-03-14T16:44:04.919847Z","iopub.status.idle":"2025-03-14T16:44:04.935982Z","shell.execute_reply.started":"2025-03-14T16:44:04.919811Z","shell.execute_reply":"2025-03-14T16:44:04.934888Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Размерность датасета\ndf.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:04.937097Z","iopub.execute_input":"2025-03-14T16:44:04.937458Z","iopub.status.idle":"2025-03-14T16:44:04.954704Z","shell.execute_reply.started":"2025-03-14T16:44:04.937431Z","shell.execute_reply":"2025-03-14T16:44:04.953603Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Пустые значения\nnull = df.isnull().sum()\nnull","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:04.957152Z","iopub.execute_input":"2025-03-14T16:44:04.957488Z","iopub.status.idle":"2025-03-14T16:44:04.977741Z","shell.execute_reply.started":"2025-03-14T16:44:04.95746Z","shell.execute_reply":"2025-03-14T16:44:04.976559Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Повторяющиеся данные\ndubl = df.duplicated().sum()\ndubl","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:04.979469Z","iopub.execute_input":"2025-03-14T16:44:04.979783Z","iopub.status.idle":"2025-03-14T16:44:05.000717Z","shell.execute_reply.started":"2025-03-14T16:44:04.979747Z","shell.execute_reply":"2025-03-14T16:44:04.999547Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"st = df.columns\nst","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.002211Z","iopub.execute_input":"2025-03-14T16:44:05.002634Z","iopub.status.idle":"2025-03-14T16:44:05.016253Z","shell.execute_reply.started":"2025-03-14T16:44:05.002593Z","shell.execute_reply":"2025-03-14T16:44:05.015221Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"nuniniq = df.nunique()\nnuniniq","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.017312Z","iopub.execute_input":"2025-03-14T16:44:05.017586Z","iopub.status.idle":"2025-03-14T16:44:05.040461Z","shell.execute_reply.started":"2025-03-14T16:44:05.017561Z","shell.execute_reply":"2025-03-14T16:44:05.039476Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import matplotlib as plt\nimport seaborn as sns\ndf['TenYearCHD'].value_counts().plot.bar()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.04135Z","iopub.execute_input":"2025-03-14T16:44:05.041644Z","iopub.status.idle":"2025-03-14T16:44:05.237583Z","shell.execute_reply.started":"2025-03-14T16:44:05.041618Z","shell.execute_reply":"2025-03-14T16:44:05.236581Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\nplt.figure(figsize=(10, 6))\nsns.countplot(data=df, x='TenYearCHD', hue='TenYearCHD', palette='pastel')\nplt.title('Расспределение диагнозов')\nplt.xlabel('Диагнозы')\nplt.ylabel('Количество случаев')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.23983Z","iopub.execute_input":"2025-03-14T16:44:05.240161Z","iopub.status.idle":"2025-03-14T16:44:05.47639Z","shell.execute_reply.started":"2025-03-14T16:44:05.240096Z","shell.execute_reply":"2025-03-14T16:44:05.475293Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.kdeplot(data=df['TenYearCHD'], fill=True)\nplt.title('График распределния диагноза')\nplt.xlabel('TenYearCHD')\nplt.ylabel('Количество диагнозов')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.477906Z","iopub.execute_input":"2025-03-14T16:44:05.47822Z","iopub.status.idle":"2025-03-14T16:44:05.799695Z","shell.execute_reply.started":"2025-03-14T16:44:05.478195Z","shell.execute_reply":"2025-03-14T16:44:05.798625Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"chd_rate = df['TenYearCHD'].mean()\nprint(f'Рейтинг: {chd_rate}')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.800658Z","iopub.execute_input":"2025-03-14T16:44:05.800948Z","iopub.status.idle":"2025-03-14T16:44:05.806481Z","shell.execute_reply.started":"2025-03-14T16:44:05.800924Z","shell.execute_reply":"2025-03-14T16:44:05.805273Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import seaborn as sns\nsns.set(style=\"whitegrid\")\n#Цикл по числовым столбцам\nfor column in df.select_dtypes(include=['number']).columns:\n#Фигура с 2 плотами\n    fig, axes = plt.subplots(1, 2, figsize=(12, 4))\n    fig.suptitle(f'Анализ выбросов: {column}', fontsize=14)\n    \n#Boxplot\n    sns.boxplot(data=df, x=column, ax=axes[0], color='skyblue')\n    axes[0].set_title(f'Boxplot для {column}')\n    \n#Гистограмма\n    sns.histplot(data=df, x=column, kde=True, ax=axes[1], color='salmon')\n    axes[1].set_title(f'Распределение для {column}')\n    \n#НАстройка отступов\n    plt.tight_layout()\n    plt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:05.807459Z","iopub.execute_input":"2025-03-14T16:44:05.807843Z","iopub.status.idle":"2025-03-14T16:44:15.817001Z","shell.execute_reply.started":"2025-03-14T16:44:05.807818Z","shell.execute_reply":"2025-03-14T16:44:15.815928Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"# Цикл по всем числовым столбцам\nfor column in df.select_dtypes(include=['number']).columns:\n    # Рассчитываем квартили и IQR\n    Q1 = df[column].quantile(0.25)\n    Q3 = df[column].quantile(0.75)\n    IQR = Q3 - Q1\n    \n    # Определяем границы выбросов\n    lower_bound = Q1 - 1.5 * IQR\n    upper_bound = Q3 + 1.5 * IQR\n    \n    # Удаляем строки с выбросами в текущем столбце\n    df = df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]\n\nprint(\"После удаления выбросов:\", df.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:15.817911Z","iopub.execute_input":"2025-03-14T16:44:15.818195Z","iopub.status.idle":"2025-03-14T16:44:15.861599Z","shell.execute_reply.started":"2025-03-14T16:44:15.81817Z","shell.execute_reply":"2025-03-14T16:44:15.860585Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Исследование взаимосвязей между признаками в виде данных\n\ndf_corr = df.corr().abs()\ndf_corr","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:15.862573Z","iopub.execute_input":"2025-03-14T16:44:15.862943Z","iopub.status.idle":"2025-03-14T16:44:15.891662Z","shell.execute_reply.started":"2025-03-14T16:44:15.862897Z","shell.execute_reply":"2025-03-14T16:44:15.890582Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Исследование взаимосвязей между признаками в виде тепловой матрицы\nplt.figure(figsize=(16,8))\nsns.heatmap(df_corr, annot=True, cmap='coolwarm')\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:15.892787Z","iopub.execute_input":"2025-03-14T16:44:15.893185Z","iopub.status.idle":"2025-03-14T16:44:16.742001Z","shell.execute_reply.started":"2025-03-14T16:44:15.893148Z","shell.execute_reply":"2025-03-14T16:44:16.740929Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Гипотезы","metadata":{}},{"cell_type":"code","source":"#Судя по таблице корреляции можно выразить несколько гипотез и зависимостей\n#Возраст и артериальное давление\ndf_age_sysBP = df[['age','sysBP','TenYearCHD']].corr()\nprint(df_age_sysBP)\n\nsns.heatmap(df_age_sysBP, annot=True, cmap='coolwarm')\nsns.lmplot(x='age', y='sysBP', hue='TenYearCHD', data=df_1, logistic=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T16:44:16.743087Z","iopub.execute_input":"2025-03-14T16:44:16.743407Z","iopub.status.idle":"2025-03-14T16:44:17.063616Z","shell.execute_reply.started":"2025-03-14T16:44:16.743381Z","shell.execute_reply":"2025-03-14T16:44:17.062225Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Processing ","metadata":{}},{"cell_type":"code","source":"#Заполнение значений Nаn на медианное значение\nmedian_value = df['education'].median()\ndf['education'] = df['education'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['education'].isnull().sum())\n\nmedian_value = df['cigsPerDay'].median()\ndf['cigsPerDay'] = df['cigsPerDay'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['cigsPerDay'].isnull().sum())\n\nmedian_value = df['BPMeds'].median()\ndf['BPMeds'] = df['BPMeds'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['BPMeds'].isnull().sum())\n\nmedian_value = df['totChol'].median()\ndf['totChol'] = df['totChol'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['totChol'].isnull().sum())\n\nmedian_value = df['heartRate'].median()\ndf['heartRate'] = df['heartRate'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['heartRate'].isnull().sum())\n\nmedian_value = df['BMI'].median()\ndf['BMI'] = df['BMI'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['BMI'].isnull().sum())\n\nmedian_value = df['glucose'].median()\ndf['glucose'] = df['glucose'].fillna(median_value)\nprint('Пустых значений в столбце остлось: ',df['glucose'].isnull().sum())","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:15.418864Z","iopub.execute_input":"2025-03-14T17:24:15.419284Z","iopub.status.idle":"2025-03-14T17:24:15.444433Z","shell.execute_reply.started":"2025-03-14T17:24:15.419251Z","shell.execute_reply":"2025-03-14T17:24:15.443327Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Масштабирование нужных признаков\nfrom sklearn.preprocessing import StandardScaler\n\nnumeric_features = ['age', 'cigsPerDay', 'totChol', 'sysBP', 'diaBP', 'BMI', 'heartRate', 'glucose']\n\nSS = StandardScaler()\n\ndf[numeric_features] = SS.fit_transform(df[numeric_features])\n\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:16.864752Z","iopub.execute_input":"2025-03-14T17:24:16.865087Z","iopub.status.idle":"2025-03-14T17:24:16.900999Z","shell.execute_reply.started":"2025-03-14T17:24:16.86506Z","shell.execute_reply":"2025-03-14T17:24:16.899729Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.preprocessing import OneHotEncoder\n\nencoder = OneHotEncoder(sparse_output=False, drop='first')\nencoded_edu = encoder.fit_transform(df[['education']])\n\n\ndf_encoded = pd.DataFrame(encoded_edu, columns=encoder.get_feature_names_out(['education'])).reset_index(drop=True)\n\n\ndf = df.drop('education', axis=1).reset_index(drop=True)\n\n\ndf = pd.concat([df, df_encoded], axis=1)\ndf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:18.405059Z","iopub.execute_input":"2025-03-14T17:24:18.405498Z","iopub.status.idle":"2025-03-14T17:24:18.442329Z","shell.execute_reply.started":"2025-03-14T17:24:18.405467Z","shell.execute_reply":"2025-03-14T17:24:18.441218Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\n\ndf = df.dropna()\nconstant_cols = [col for col in df.columns if df[col].nunique() == 1]\ndf = df.drop(constant_cols, axis=1)\n\ny = df['TenYearCHD']\nX = df.drop('TenYearCHD', axis=1)\n\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:20.163763Z","iopub.execute_input":"2025-03-14T17:24:20.164286Z","iopub.status.idle":"2025-03-14T17:24:20.186177Z","shell.execute_reply.started":"2025-03-14T17:24:20.164249Z","shell.execute_reply":"2025-03-14T17:24:20.184953Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(\"Размер X_train:\", X_train.shape)\nprint(\"Размер X_test:\", X_test.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:21.406955Z","iopub.execute_input":"2025-03-14T17:24:21.407319Z","iopub.status.idle":"2025-03-14T17:24:21.413889Z","shell.execute_reply.started":"2025-03-14T17:24:21.407287Z","shell.execute_reply":"2025-03-14T17:24:21.412858Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n\nmodel = LinearRegression()\n\nmodel.fit(X_train, y_train)\n\ny_pred = model.predict(X_test)\n\nmse = mean_squared_error(y_test, y_pred)\nprint(f\"MSE: {mse:.2f}\")\n\nmae = mean_absolute_error(y_test, y_pred)\nprint(f\"MAE: {mae:.2f}\")\n\nr2 = r2_score(y_test, y_pred)\nprint(f\"R²: {r2:.2f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:22.774787Z","iopub.execute_input":"2025-03-14T17:24:22.775181Z","iopub.status.idle":"2025-03-14T17:24:22.799032Z","shell.execute_reply.started":"2025-03-14T17:24:22.775098Z","shell.execute_reply":"2025-03-14T17:24:22.797921Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"coefficients = pd.DataFrame({\n    'Признак': X.columns,\n    'Коэффициент': model.coef_\n})\n\n\ncoefficients = coefficients.reindex(coefficients['Коэффициент'].abs().sort_values(ascending=False).index)\nprint(coefficients)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:26.360746Z","iopub.execute_input":"2025-03-14T17:24:26.361214Z","iopub.status.idle":"2025-03-14T17:24:26.375409Z","shell.execute_reply.started":"2025-03-14T17:24:26.361183Z","shell.execute_reply":"2025-03-14T17:24:26.37408Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"#Сохранение модели линейной регрессии \nimport joblib\njoblib.dump(model, 'linreg0')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-14T17:24:29.194251Z","iopub.execute_input":"2025-03-14T17:24:29.194599Z","iopub.status.idle":"2025-03-14T17:24:29.204459Z","shell.execute_reply.started":"2025-03-14T17:24:29.19457Z","shell.execute_reply":"2025-03-14T17:24:29.203328Z"}},"outputs":[],"execution_count":null}]}